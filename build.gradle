plugins {
	id 'maven-publish'
	alias libs.plugins.quilt.loom
}

base {
	archivesName = project.archives_base_name
}

version = "$project.version+${libs.versions.minecraft.get()}"
group = project.maven_group

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	maven { url = "https://mvn.devos.one/snapshots/" }
	maven { url = "https://maven.terraformersmc.com/" }
	maven { url = "https://jitpack.io/" }
}
sourceSets {
	main {
		resources {
			srcDir("src/generated/resources")
			exclude("src/generated/resources/.cache")
		}
	}
}


loom {
	runs {
		datagen {
			client()

			name "Data Generation"
			vmArg "-Dfabric-api.datagen"
			vmArg "-Dfabric-api.datagen.output-dir=${file("src/generated/resources")}"
			vmArg "-Dfabric-api.datagen.modid=favorite_things"
			vmArg "-Dporting_lib.datagen.existing_resources=${file("src/main/resources")}"
		}
	}
	// Loom and Loader both use this block in order to gather more information about your mod.
	mods {
		// This should match your mod id.
		"favorite_things" {
			// Tell Loom about each source set used by your mod here. This ensures that your mod's classes are properly transformed by Loader.
			sourceSet("main")
			// If you shade (directly include classes, not JiJ) a dependency into your mod, include it here using one of these methods:
			// dependency("com.example.shadowedmod:1.2.3")
			// configuration("exampleShadedConfigurationName")
		}
	}
}

// All the dependencies are declared at gradle/libs.version.toml and referenced with "libs.<id>"
// See https://docs.gradle.org/current/userguide/platforms.html for information on how version catalogs work.
dependencies {
	minecraft libs.minecraft
	mappings variantOf(libs.quilt.mappings) { classifier 'intermediary-v2' }
	// Replace the above line with the block below if you want to use Mojang mappings as your primary mappings, falling back on QM for parameters and Javadocs
	/*
	mappings loom.layered {
		mappings "org.quiltmc:quilt-mappings:${libs.versions.quilt.mappings.get()}:intermediary-v2"
		officialMojangMappings()
	}
	*/
	modImplementation libs.quilt.loader
	modCompileOnly "dev.emi:emi-fabric:${emi_version}:api"
	modLocalRuntime ("dev.emi:emi-fabric:${emi_version}"){
		exclude group: 'net.fabricmc', module: 'fabric-loader'
		exclude group: 'net.fabricmc.fabric-api', module: 'fabric-convention-tags-v1'
		exclude group: 'net.fabricmc.fabric-api', module: 'fabric-key-binding-api-v1'
		exclude group: 'net.fabricmc.fabric-api', module: 'fabric-content-registries-v0'
		exclude group: 'net.fabricmc.fabric-api', module: 'fabric-item-group-api-v1'
		exclude group: 'net.fabricmc.fabric-api', module: 'fabric-networking-api-v1'
		exclude group: 'net.fabricmc.fabric-api', module: 'fabric-game-rule-api-v1'
		exclude group: 'net.fabricmc.fabric-api', module: 'fabric-recipe-api-v1'
		exclude group: 'net.fabricmc.fabric-api', module: 'fabric-transitive-access-wideners-v1'
		exclude group: 'net.fabricmc.fabric-api', module: 'fabric-block-api-v1'
		exclude group: 'net.fabricmc.fabric-api', module: 'fabric-api'
		exclude group: 'net.fabricmc.fabric-api', module: 'fabric-resource-conditions-api-v1'
		exclude group: 'net.fabricmc.fabric-api', module: 'fabric-loot-api-v2'
		exclude group: 'net.fabricmc.fabric-api', module: 'fabric-client-tags-api-v1'
		exclude group: 'net.fabricmc.fabric-api', module: 'fabric-api-lookup-api-v1'
		exclude group: 'net.fabricmc.fabric-api', module: 'fabric-lifecycle-events-v1'
		exclude group: 'net.fabricmc.fabric-api', module: 'fabric-blockrenderlayer-v1'
		exclude group: 'net.fabricmc.fabric-api', module: 'fabric-registry-sync-v0'
		exclude group: 'net.fabricmc.fabric-api', module: 'fabric-renderer-indigo'
		exclude group: 'net.fabricmc.fabric-api', module: 'fabric-biome-api-v1'
		exclude group: 'net.fabricmc.fabric-api', module: 'fabric-api-base'
		exclude group: 'net.fabricmc.fabric-api', module: 'fabric-renderer-api-v1'
		exclude group: 'net.fabricmc.fabric-api', module: 'fabric-transfer-api-v1'
		exclude group: 'net.fabricmc.fabric-api', module: 'fabric-sound-api-v1'
		exclude group: 'net.fabricmc.fabric-api', module: 'fabric-events-interaction-v0'
		exclude group: 'net.fabricmc.fabric-api', module: 'fabric-message-api-v1'
		exclude group: 'net.fabricmc.fabric-api', module: 'fabric-dimensions-v1'
		exclude group: 'net.fabricmc.fabric-api', module: 'fabric-object-builder-api-v1'
		exclude group: 'net.fabricmc.fabric-api', module: 'fabric-rendering-fluids-v1'
		exclude group: 'net.fabricmc.fabric-api', module: 'fabric-command-api-v2'
		exclude group: 'net.fabricmc.fabric-api', module: 'fabric-particles-v1'
		exclude group: 'net.fabricmc.fabric-api', module: 'fabric-item-api-v1'
		exclude group: 'net.fabricmc.fabric-api', module: 'fabric-rendering-v1'
		exclude group: 'net.fabricmc.fabric-api', module: 'fabric-entity-events-v1'
		exclude group: 'net.fabricmc.fabric-api', module: 'fabric-screen-api-v1'
		exclude group: 'net.fabricmc.fabric-api', module: 'fabric-data-generation-api-v1'
		exclude group: 'net.fabricmc.fabric-api', module: 'fabric-resource-loader-v0'
		exclude group: 'net.fabricmc.fabric-api', module: 'fabric-crash-report-info-v1'
		exclude group: 'net.fabricmc.fabric-api', module: 'fabric-mining-level-api-v1'

	}
	modImplementation("com.tterrag.registrate_fabric:Registrate:${registrate_version}"){
		exclude group: 'net.fabricmc', module: 'fabric-loader'
		exclude group: 'net.fabricmc.fabric-api'
	}
	// QSL is not a complete API; You will need Quilted Fabric API to fill in the gaps.
	// Quilted Fabric API will automatically pull in the correct QSL version.
	modImplementation libs.bundles.quilted.fabric.api
	// modImplementation libs.bundles.quilted.fabric.api // If you wish to use Fabric API's deprecated modules, you can replace the above line with this one
}

processResources {
	inputs.properties 'version': version, 'group': project.group

	filesMatching('quilt.mod.json') {
		expand 'version': version, 'group': project.group
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = 'UTF-8'
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Still required by IDEs such as Eclipse and Visual Studio Code
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17

	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	// If this mod is going to be a library, then it should also generate Javadocs in order to aid with development.
	// Uncomment this line to generate them.
	// withJavadocJar()
}

// If you plan to use a different file for the license, don't forget to change the file name here!
jar {
	from('LICENSE') {
		rename { "${it}_${base.archivesName.get()}" }
	}
}

// Configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
